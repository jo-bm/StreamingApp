name: CI/CD

on:
  push:
    branches:
      - master
      - feature/**

jobs:
  CI:
    runs-on: self-hosted
    steps:

    # checkout
    - name: Checkout Repository
      uses: actions/checkout@v3
      with: 
        repository: Jo-Bm/StreamingApp 
        ref: master
        token: ${{ secrets.GHTOKEN }}
    
    - name: Create key
      run: cp ~/yek/*.json ./app/

    # docker compose up
    - name: Start Docker Compose
      run: |
        docker compose up -d

    # end to end testing
    - name: Run Tests
      run: |
        pip install pytest
        python3 -m pytest app/E2E.py


    # git tag
    - name: tagger
      if: github.ref == 'refs/heads/master'
      id: tagger
      env:          
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      run: |
        tag=$(bash ./app/tagger.sh)
        export TAG=$tag
        echo "::set-env name=TAG::$TAG"

    # publish to artifact registry    
    - name: publish to ACR
      if: github.ref == 'refs/heads/master'
      run: |
        echo $TAG
        docker tag streamingapp-app:latest gcr.io/psychic-mason-374614/streamingapp-app:$TAG
        docker push gcr.io/psychic-mason-374614/streamingapp-app:$TAG

    # push tags
    - name: push tags
      if: github.ref == 'refs/heads/master'
      run: |
        git push origin $TAG

    # - name: Github login
    #   if: github.ref == 'refs/heads/master'
    #   uses: actions/checkout@v3
    #   with: 
    #     repository: Jo-Bm/PortfolioGOC
    #     ref: master
    #     token: ${{ secrets.GHTOKEN }}
    
    # - name: Deploy (trig argo)
    #   run: |

        
    #     TTAG="jack3131\/mysql:$TAG"
    #     sed -i "s/jack3131\/mysql:[0-9]\+\.[0-9]\+\.[0-9]\+/$TTAG/g" electify/templates/statefullset-db.yaml
    #     TTAG="jack3131\/electify:$TAG"
    #     sed -i "s/jack3131\/electify:[0-9]\+\.[0-9]\+\.[0-9]\+/$TTAG/g" electify/templates/app-deploy.yaml

    #     git config --global user.email "you@example.com"
    #     git config --global user.name "Github Action"
    #     git commit -am "$TAG"

    #     git push origin master


    # # report
    # - name: failure
    #   if: failure()
    #   env:
    #     TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    #     TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    #   run: |
    #     message="<b>‚ùå CI for branch:</b> $GITHUB_REF_NAME failed üö®üíÄ
    #      <b>Tag:</b> $TAG
    #      <b>Link:</b> <a href='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'>Link</a>
    #      <b>Run number:</b> $GITHUB_RUN_NUMBER"

    #     curl -s --data-urlencode "chat_id=$TELEGRAM_CHAT_ID" --data-urlencode "text=$message" --data "parse_mode=HTML" "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" > /dev/null


    # - name: success
    #   if: success()
    #   env:
    #     TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    #     TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    #   run: |
    #     message="<b>‚úÖ CI for branch:</b> $GITHUB_REF_NAME succeeded üöÄü§ò
    #      <b>Tag:</b> $TAG
    #      <b>Link:</b> <a href='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'>Link</a>
    #      <b>Run number:</b> $GITHUB_RUN_NUMBER"

    #     curl -s --data-urlencode "chat_id=$TELEGRAM_CHAT_ID" --data-urlencode "text=$message" --data "parse_mode=HTML" "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" > /dev/null


